@model Library_Management.Models.AuthorDetailsViewModel

@{
    ViewData["Title"] = Model.Name;
}

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Author")">Authors</a></li>
                    <li class="breadcrumb-item active" aria-current="page">@Model.Name</li>
                </ol>
            </nav>
        </div>
    </div>

    <div class="row">
        <!-- Author Information -->
        <div class="col-lg-4 mb-4">
            <div class="card shadow-sm">
                <div class="card-body text-center">
                    @if (!string.IsNullOrEmpty(Model.ProfileImageUrl))
                    {
                        <img src="@Model.ProfileImageUrl" alt="@Model.Name" 
                             class="rounded-circle mb-3" style="width: 150px; height: 150px; object-fit: cover;">
                    }
                    else
                    {
                        <div class="bg-secondary rounded-circle d-flex align-items-center justify-content-center mx-auto mb-3"
                             style="width: 150px; height: 150px;">
                            <i class="bi bi-person-fill text-white" style="font-size: 4rem;"></i>
                        </div>
                    }
                    
                    <h3 class="card-title">@Model.Name</h3>
                    
                    @if (Model.BirthDate.HasValue)
                    {
                        <p class="text-muted">
                            <i class="bi bi-calendar3"></i> Born: @Model.BirthDate.Value.ToString("MMMM dd, yyyy")
                        </p>
                        @if (Model.Age.HasValue)
                        {
                            <p class="text-muted">
                                <i class="bi bi-person-badge"></i> Age: @Model.Age years old
                            </p>
                        }
                    }
                    
                    <p class="text-muted">
                        <i class="bi bi-book"></i> @Model.Books.Count book(s) in library
                    </p>
                    
                    @if (Model.IsArchived)
                    {
                        <span class="badge bg-warning text-dark">
                            <i class="bi bi-archive"></i> Archived
                        </span>
                    }
                </div>
                <div class="card-footer bg-transparent">
                    <div class="d-grid gap-2">
                        <a href="@Url.Action("Edit", new { id = Model.AuthorId })" class="btn btn-outline-primary">
                            <i class="bi bi-pencil"></i> Edit Author
                        </a>
                        @if (Model.IsArchived)
                        {
                            <button class="btn btn-outline-success" onclick="restoreAuthor('@Model.AuthorId')">
                                <i class="bi bi-arrow-clockwise"></i> Restore Author
                            </button>
                        }
                        else
                        {
                            <button class="btn btn-outline-secondary" onclick="archiveAuthor('@Model.AuthorId')">
                                <i class="bi bi-archive"></i> Archive Author
                            </button>
                        }
                        <button class="btn btn-outline-danger" onclick="deleteAuthor('@Model.AuthorId')">
                            <i class="bi bi-trash"></i> Delete Author
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Author Biography and Books -->
        <div class="col-lg-8">
            @if (!string.IsNullOrEmpty(Model.Biography))
            {
                <div class="card shadow-sm mb-4">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="bi bi-journal-text"></i> Biography</h5>
                    </div>
                    <div class="card-body">
                        <p class="card-text">@Model.Biography</p>
                    </div>
                </div>
            }

            <div class="card shadow-sm">
                <div class="card-header">
                    <h5 class="mb-0"><i class="bi bi-book"></i> Books by @Model.Name</h5>
                </div>
                <div class="card-body">
                    @if (!Model.Books.Any())
                    {
                        <div class="text-center py-4">
                            <i class="bi bi-book display-4 text-muted"></i>
                            <h6 class="mt-3 text-muted">No books found</h6>
                            <p class="text-muted">This author doesn't have any books in the library yet.</p>
                        </div>
                    }
                    else
                    {
                        <div class="row">
                            @foreach (var book in Model.Books)
                            {
                                <div class="col-md-6 col-xl-4 mb-3">
                                    <div class="card h-100">
                                        @if (!string.IsNullOrEmpty(book.CoverImageUrl))
                                        {
                                            <img src="@book.CoverImageUrl" alt="@book.Title" class="card-img-top" 
                                                 style="height: 200px; object-fit: cover;">
                                        }
                                        else
                                        {
                                            <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 200px;">
                                                <i class="bi bi-book text-muted" style="font-size: 3rem;"></i>
                                            </div>
                                        }
                                        <div class="card-body">
                                            <h6 class="card-title">@book.Title</h6>
                                            <p class="card-text">
                                                <small class="text-muted">ISBN: @book.ISBN</small><br>
                                                <small class="text-muted">Genre: @book.Genre</small><br>
                                                <small class="text-muted">Copies: @book.AvailableCopies/@book.TotalCopies</small>
                                            </p>
                                        </div>
                                        <div class="card-footer bg-transparent">
                                            <a href="@Url.Action("Details", "Book", new { id = book.BookId })" class="btn btn-sm btn-outline-primary w-100">
                                                <i class="bi bi-eye"></i> View Details
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Author Modal -->
<div class="modal fade" id="deleteAuthorModal" tabindex="-1" aria-labelledby="deleteAuthorModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="deleteAuthorModalContent">
            <!-- Content will be loaded via AJAX -->
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function archiveAuthor(authorId) {
            if (confirm('Are you sure you want to archive this author and all their books?')) {
                $.post('@Url.Action("Archive", "Author")', { id: authorId })
                    .done(function() {
                        location.reload();
                    })
                    .fail(function() {
                        alert('Error archiving author');
                    });
            }
        }

        function restoreAuthor(authorId) {
            if (confirm('Are you sure you want to restore this author?')) {
                $.post('@Url.Action("Restore", "Author")', { id: authorId })
                    .done(function() {
                        location.reload();
                    })
                    .fail(function() {
                        alert('Error restoring author');
                    });
            }
        }

        function deleteAuthor(authorId) {
            $('#deleteAuthorModalContent').load('@Url.Action("DeleteModal", "Author")?id=' + authorId, function() {
                $('#deleteAuthorModal').modal('show');
            });
        }
    </script>
}
